(function () { var a = ["jquery", "modernizer-2.0.6.min", "jquery.ajaxmanager", "jquery.ba-bbq.min", "jquery.endless-scroll", "jquery.masonry.min", "dotimeout", "mustache"]; require(a, function (f) { Date.prototype.formatMMDDYYYY = function () { return this.getMonth() + "/" + this.getDate() + "/" + this.getFullYear() }; var b = { News: "news", Article: "article" }; var e = { Context: null, Scroll: null, Page: null, ArticleID: null, League: null, Stream: { headlines: [] }, ResultCount: 0 }; var d = { SportsList: "<ul id='sports'>{{#Sports}}<li><span name='{{name}}'>{{displayname}}</span></li>{{/Sports}}</ul>", Headlines: "{{#headlines}}<li class='item' headlineid='{{id}}' url='{{apiurl}}'><div class='box'><h3><a href='{{weburl}}' target='_blank'>{{headline}}</a></h3><div class='date'>{{published}}</div><div class='source'>{{source}}</div><div class='image'><img src='{{images.0.url}}' alt='{{images.0.alt}}' /><div class='credit'>credit: {{images.0.credit}}</div><div class='caption'>{{images.0.caption}}</div></div><div class='desc'>{{description}}</div><div class='image'><img src='{{images.1.url}}' alt='{{images.1.alt}}' /><div class='credit'>credit: {{images.1.credit}}</div><div class='caption'>{{images.1.caption}}</div></div><div class='image'><img src='{{images.2.url}}' alt='{{images.2.alt}}' /><div class='credit'>credit: {{images.2.credit}}</div><div class='caption'>{{images.2.caption}}</div></div></div><div class='related-articles'><h3>Related Articles</h3><ul class='related'>{{#related}}<li><a href='{{links.web.href}}' target='_blank'>{{title}}</a></li>{{/related}}</ul></div><div class='toolbar'><div class='bookmark {{bookmark}}' state='{{bookmark}}' articleid='{{id}}' title='{{bookmarktitle}}' /></div></li>{{/headlines}}", Article: "{{#headlines}}<img alt='close' class='closeArticle' src='img/fancy_close.png' /><div class='box' id='{{id}}' url='{{apiurl}}'><h2>{{headline}}</h2><span class='date'>{{published}},</span><span class='source'>{{source}}</span><div class='desc'>{{description}}</div><div class='imgwidget'><ul class='list'>{{#images}}<li><img class='thumbnail' src='{{url}}' alt='{{alt}}' /><img class='hidden_image' src='{{url}}' height='{{height}}' width='{{width}}' alt='{{alt}}' style='display:none;'/><span class='hidden_caption' style='display:none;'>{{caption}}</span><span class='hidden_credit' style='display:none;'>Credit: {{credit}}</span></li>{{/images}}</ul><div class='view'><div class='caption' /><div class='img' /><div class='credit' /></div></div><ul class='categories'>{{#categories}}<li>{{description}}</li>{{/categories}}</ul><div class='Articlelink'><a href='{{weburl}}' target='_blank'>Go to original article</a></div><div class='related-articles'><h3>Related Articles</h3><ul class='related'>{{#related}}<li id='{{id}}'>{{title}}</li>{{/related}}</ul></div><div class='adbanner'></div><div class='clearfix'></div></div>{{/headlines}}", Leagues: "{{#leagues}}<li><span name='{{abbreviation}}' title='{{name}}'>{{abbreviation}}</span></li>{{/leagues}}" }; var g = { busy: function () { f(".loading").show() }, ready: function () { f(".loading").hide() }, createSportsList: function (i) { var h = Mustache.to_html(d.SportsList, i); f("#nav").html(h) }, showArticle: function (l) { e.Context = b.Article; g.screenSetup(); var i = Mustache.to_html(d.Article, l); f("#article").html(i); var j = f("#article .adbanner"); j.append(f("#adspanel .boxad").clone().show()); j.append("<div class='clearfix'></div>"); window.scrollTo(0, 0); if (l.headlines[0].images.length > 0) { f(".imgwidget").show(); var h = f("<img />").attr("src", l.headlines[0].images[0].url); f(".imgwidget .view .img").html(h); f(".imgwidget .view .caption").text(l.headlines[0].images[0].caption); f(".imgwidget .view .credit").text(l.headlines[0].images[0].credit); if (l.headlines[0].images.length == 1) { f(".imgwidget .list").hide() } else { f(".imgwidget .list").show() } } else { f(".imgwidget").hide() } }, showHeadlines: function (j) { e.Context = b.News; g.screenSetup(); var h = Mustache.to_html(d.Headlines, j); f("#headlines").append(h); c.AdCnt++; if (c.AdCnt == 1) { var i = f("<li class='item ad' />"); i.append(f("#adspanel .towerad").clone()); i.appendTo("#headlines") } if (c.AdCnt > c.MaxAdCnt) { c.AdCnt = 0 } f("#headlines li img[alt='']").parent().remove(); g.masonry() }, showLeagues: function (i) { var h = Mustache.to_html(d.Leagues, i); f("#leagues").html(h); g.highlightMenu() }, screenSetup: function () { switch (e.Context) { case b.News: f("#headlines").show(); f("#article").hide(); break; case b.Article: f("#headlines").hide(); f("#article").show(); break } }, reset: function () { f("#msg").empty(); f("#headlines li").remove() }, highlightMenu: function () { f("#sports li a").each(function () { if (f(this).attr("name") == e.Page) { f(this).addClass("select") } else { f(this).removeClass("select") } }); f("#leagues li span").each(function () { if (f(this).attr("name") == e.League) { f(this).addClass("select") } else { f(this).removeClass("select") } }) }, emptyMsg: function () { if (f("#headlines li").length <= 0) { f("#headlines").height(0); f("#msg").empty().text("No news found for this section, scroll down for older news."); f("#msg").append(f("#adspanel .boxad").clone().css("margin-top", "2em")) } else { f("#msg").empty() } }, masonry: function () { var h = f("#headlines"); h.imagesLoaded(function () { h.masonry({ itemSelector: ".item" }) }); h.masonry("reload") } }; var c = { NDate: 0, Date: null, Days: 0, CFail: 0, Offset: 1, AdCnt: 0, MaxAdCnt: 2, Ajax: null, Lag: 1000, SportsAPIKey: "eqe7na27uxftyx8qnj6f3uwz", AlertsAPIKey: "888bvpezh76x4ntfag4z5ehf", Mime: "application/json", SportsAPI: "http://api.espn.com/v1/sports", CacheSportsAPI: "cache/sports.json", LeaguesAPI: "http://api.espn.com/v1/sports/{{sport}}/leagues", ArticleAPI: "http://api.espn.com/v1/sports/news/", LeagueAPI: "http://api.espn.com/v1/sports/", Sports: [], CurrentSportName: "", NewsContextAPI: null, NewsContextHeading: null, Bookmarks: "snpbookmarks", GetSportsList: function () { c.Ajax.add({ url: c.SportsAPI, data: { apikey: c.SportsAPIKey, _accept: c.Mime }, beforeSend: g.busy(), dataType: "jsonp", success: function (h) { if (h.status != "error") { c.LoadSportsList(h) } else { c.GetCachedSportsList() } }, complete: function () { g.ready() }, error: function () { c.GetCachedSportsList() } }) }, GetCachedSportsList: function () { c.Ajax.add({ url: c.CacheSportsAPI, beforeSend: g.busy(), dataType: "json", success: function (h) { c.LoadSportsList(h) }, complete: function () { g.ready() } }) }, LoadSportsList: function (h) { f.each(h.sports, function () { c.Sports.push({ id: this.id, name: this.name, displayname: this.name, sportsurl: this.links.api.sports.href, newsurl: this.links.api.news.href, notesurl: this.links.api.notes.href, headlinesurl: this.links.api.headlines.href, eventsurl: this.links.api.events.href, leagues: this.leagues }) }); if (Modernizr.localstorage) { c.Sports.push({ id: "bookmarks", name: "bookmarks", displayname: "My Bookmarks" }) } }, GetLeaguesList: function (h) { f.each(c.Sports, function () { var i = f(this)[0]; if (i.name == h) { if (i.leagues != undefined) { g.showLeagues(i) } } }) }, GetNews: function () { if (c.NewsContextAPI != null) { c.Ajax.add({ url: c.NewsContextAPI + "/dates/" + c.NDate, data: { apikey: c.SportsAPIKey, _accept: c.Mime, offset: c.Offset }, dataType: "jsonp", beforeSend: function () { g.busy() }, complete: function () { g.emptyMsg(); f("#headlines").masonry("reload"); g.ready() }, success: function (l) { if (l.status != "error") { var h = { Stream: { headlines: []} }; e.ResultCount = l.resultsCount; var j; var i = c.GetBookmarksRaw(); if (i != null) { j = JSON.parse(i) } if (l.headlines.length > 0) { f.each(l.headlines, function () { if (this.headline != undefined && this.headline != "") { var p = []; f.each(this.images, function () { p[this.alt] = this }); var n = []; for (k in p) { n.push(p[k]) } var r = new Date(this.published); var q = ""; var o = "bookmark"; var m = this.id; if (j != undefined) { if (j.Stream.headlines != undefined) { f.each(j.Stream.headlines, function (t, s) { if (s.id == m) { q = "bookmarked"; o = "remove bookmark" } }) } } var r = { id: this.id, apiurl: this.links.api.news.href, weburl: this.links.web.href, headline: this.headline, published: r.toDateString() + " " + r.toLocaleTimeString(), source: this.source, description: this.description, images: n, related: this.related, bookmark: q, bookmarktitle: o }; h.Stream.headlines.push(r); e.Stream.headlines.push(r) } }); g.showHeadlines(h.Stream) } } } }) } }, GetArticle: function (h) { c.Ajax.add({ url: c.ArticleAPI + h, data: { apikey: c.SportsAPIKey, _accept: c.Mime }, dataType: "jsonp", success: function (m) { var l; var i; var o; var j; f.each(e.Stream.headlines, function (q, p) { if (p.id == h) { if (q < e.Stream.headlines.length - 1) { l = e.Stream.headlines[q + 1].id; i = e.Stream.headlines[q + 1].headline } if (q > 0) { o = e.Stream.headlines[q - 1].id; j = e.Stream.headlines[q - 1].headline } } }); var n = { headlines: [] }; if (m.headlines.length > 0) { f.each(m.headlines, function () { var q = []; f.each(this.images, function () { q[this.alt] = this }); var p = []; for (k in q) { p.push(q[k]) } var r = this.published.match(/(\d+)/g); var s = new Date(this.published); n.headlines.push({ id: this.id, apiurl: this.links.api.news.href, weburl: this.links.web.href, headline: this.headline, published: s.toDateString() + " " + s.toLocaleTimeString(), source: this.source, description: this.description, images: p, related: this.related, prevId: o, prevText: j, nextID: l, nextText: i }) }) } g.showArticle(n) }, complete: function () { g.ready() } }) }, Reset: function () { c.Date = new Date(); c.NDate = c.GetNumericDate(c.Date); c.Days = 0; c.CFail = 0; c.Offset = 1; c.AdCnt = 0; g.reset() }, Init: function () { f("#adspanel").hide(); c.Sports.push({ id: "home", name: "home", displayname: "Top Stories", newsurl: "http://api.espn.com/v1/sports/news" }); c.Ajax = f.manageAjax.create("news", { maxRequests: 1, queue: true, cacheResponse: false }) }, GetNumericDate: function (h) { var i = parseInt(String(h.getFullYear()) + ("0" + (h.getMonth() + 1)).slice(-2) + ("0" + h.getDate()).slice(-2)); return i }, SaveBookmark: function (n, h) { if (Modernizr.localstorage) { var l; var i = localStorage.getItem(c.Bookmarks); if (i == null) { l = { Stream: { headlines: []}} } else { l = JSON.parse(i) } var j = false; f.each(l.Stream.headlines, function () { if (f(this)[0].id == n.id) { j = true } }); if (j == false) { n.bookmark = "bookmarked"; l.Stream.headlines.push(n) } try { localStorage.setItem(c.Bookmarks, JSON.stringify(l)); h.attr("state", "bookmarked"); h.attr("title", "remove bookmark"); h.addClass("bookmarked") } catch (m) { if (m == QUOTA_EXCEEDED_ERR) { f("#msg").text("Unable to bookmark. You might have exceeded the local storage limit.") } } } }, RemoveBookmark: function (l, h) { if (Modernizr.localstorage) { var j; var i = localStorage.getItem(c.Bookmarks); if (i == null) { j = { Stream: { headlines: []}} } else { j = JSON.parse(i) } f.each(j.Stream.headlines, function (m, n) { if (f(this)[0].id == l.id) { j.Stream.headlines.splice(m, 1) } }); localStorage.setItem(c.Bookmarks, JSON.stringify(j)); h.attr("state", ""); h.attr("title", "bookmark"); h.removeClass("bookmarked") } }, GetBookmarksRaw: function () { var h = localStorage.getItem(c.Bookmarks); return h }, GetBookmarks: function () { var i = c.GetBookmarksRaw(); var j = false; if (i != null) { var h = JSON.parse(i); g.reset(); e.Stream = h.Stream; if (h.Stream.headlines.length > 0) { j = true; g.showHeadlines(h.Stream); f("#msg").empty().text("Currently bookmarks are stored in the local browser storage; You will not be able to access these from other browsers or machines.") } } if (j == false) { f("#msg").empty().text("You have not bookmarked any article."); f("#msg").append(f("#adspanel .boxad").clone().css("margin-top", "2em")); f("#main").show() } } }; f(function () { c.Init(); c.Reset(); c.GetSportsList(); f(document).on("click", "#sports li span", function (j) { c.Reset(); var h = f(this).attr("name"); var i = {}; i.p = h; f.bbq.pushState(i); f.bbq.removeState("l"); f.bbq.removeState("i"); e.Page = h; g.highlightMenu() }); f(document).on("click", "#leagues li span", function (j) { c.Reset(); var h = f(this).attr("name"); var i = {}; i.l = h; f.bbq.pushState(i); f.bbq.removeState("i"); f("#headlines li").remove(); e.League = h; g.highlightMenu() }); f(document).on("click", ".bookmark", function (j) { var l = f(this).attr("articleid"); var i = f(this).attr("state"); var h = f(this); f.each(e.Stream.headlines, function () { var m = f(this)[0]; if (m.id == l) { if (i == "") { c.SaveBookmark(m, h) } else { c.RemoveBookmark(m, h) } } }); if (e.Page == "bookmarks") { c.GetBookmarks() } }); f(window).bind("hashchange", function (i) { c.Reset(); var h = f.bbq.getState(); e.Page = h.p; e.ArticleID = h.i; e.League = h.l; if (e.Page != null) { document.title = "Sports News Pub - " + e.Page } if (e.League != null) { document.title = document.title + " - " + e.League } if (e.Page == null) { e.Page = "home" } f.doTimeout(c.Lag, function () { if (e.ArticleID) { e.Context = b.Article; c.GetArticle(e.ArticleID) } else { if (e.Page) { e.Stream.headlines = []; f("#leagues li").remove(); e.Context = b.News; if (e.Page == "bookmarks") { c.GetBookmarks() } else { f.each(c.Sports, function () { if (this.name == e.Page) { if (e.League) { c.CurrentSportName = this.name; c.NewsContextAPI = c.LeagueAPI + c.CurrentSportName.toLowerCase() + "/" + e.League.toLowerCase() + "/news"; c.NewsContextHeading = c.CurrentSportName.toLowerCase() + "/" + e.League.toLowerCase() } else { c.CurrentSportName = this.name; c.NewsContextAPI = this.newsurl; c.NewsContextHeading = this.displayname } if (c.CurrentSportName != "home" && c.CurrentSportName != "bookmarks") { c.GetLeaguesList(c.CurrentSportName) } c.GetNews() } }) } } } g.highlightMenu() }) }); f(window).trigger("hashchange"); g.ready(); f(window).endlessScroll({ fireOnce: true, fireDelay: 1500, bottomPixels: 500, callback: function (h) { if (e.Context == "news" && e.Page != "bookmarks") { c.Offset += 10; if (c.Offset > e.ResultCount) { c.Date.setDate(c.Date.getDate() - 1); c.NDate = c.GetNumericDate(c.Date); c.Offset = 1 } f.doTimeout(c.Lag, function () { c.GetNews() }) } } }) }) }) })();